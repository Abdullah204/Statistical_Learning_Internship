{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Gradient Descent","provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1629809774808}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"aJNhcHr-PA_4"},"source":["Gradient Descent Algorithm "]},{"cell_type":"code","metadata":{"id":"-eVnwKjIsSuV","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"error","timestamp":1629818743158,"user_tz":-120,"elapsed":3243,"user":{"displayName":"Abdullah Ahmad","photoUrl":"","userId":"04299824777937366842"}},"outputId":"bc228fab-d2fa-4bca-d4ef-9769a0ab8ddf"},"source":["import numpy as np                                    \n","from sklearn import datasets\n","from sklearn import preprocessing                                                   \n","from sklearn.linear_model import LinearRegression     \n","import matplotlib.pyplot as plt\n","boston = datasets.load_boston()          \n","X = boston.data                          \n","Y = boston.target  \n","M, N = X.shape\n","\n","# standardization :\n","std_scaler = preprocessing.StandardScaler()\n","standardized_X = std_scaler.fit_transform(X)\n","allOnes = np.ones((len(standardized_X), 1))\n","standardized_X2 = np.hstack([allOnes, standardized_X])\n","\n","#print(score(standardized_X2,Y,beta))\n","\n","\n","#cost function calculator\n","def cost(X, Y, beta):\n","  return ((Y - (X @ beta))**2).mean()\n","# predictor function\n","def predict(X, beta):\n","  return X @ beta\n","\n","# A function that finds the R^2 Statistic).\n","def score(X, Y, beta):\n","  Y_predicted = predict(X, beta)\n","  u = ((Y - Y_predicted)**2).sum()\n","  v = ((Y - Y.mean())**2).sum()\n","  return 1 - (u/v)\n","\n","def adjScore(X, Y, beta,M,N):\n","  return 1-(1-score(X,Y,beta)*(M-1)/(M-N-1))\n","\n","# the Batch Gradient Descent function.\n","def GradientDescent(X, Y, alpha, num_iterations, print_cost = False):\n","  M, N = X.shape\n","  X2 = X.copy()\n","  allOnes = np.ones((len(Y), 1))               \n","  X2 = np.hstack([allOnes, X2]) # Concatenating the allOnes column to X2(for the intercept value).\n","  #np.random.seed(0)\n","  beta = np.random.uniform(-10.0, 10.0, N + 1)\n","  cost_array = []\n","\n","  for x in range(num_iterations):\n","    cost_ = cost(X2, Y, beta)\n","    cost_array.append(cost_)\n","    if print_cost:\n","      print(\"Iteration :\", x + 1, '\\t', \"Cost : \" + '%.4f'%cost_)\n","    slope_array = np.zeros(N + 1)\n","    for i in range(M):\n","      f_xi = (beta * X2[i]).sum()\n","      y_i = Y[i]\n","      for j in range(N + 1):\n","        slope_array[j] += (-2/M) * (y_i - f_xi) * X2[i,j]\n","\n","    beta -= (alpha * slope_array)\n","\n","  return beta, cost_array\n","\n","# the normal equation function\n","def normalEqn(X, y):  \n","    beta = np.linalg.inv((X.T).dot(X)).dot(X.T).dot(y) \n","    return beta # returns array of predictors  \n","\n","beta, cost_array = GradientDescent(standardized_X, Y, 0.1, 250, True)\n","\n","print(\"R^2:\" ,score(standardized_X2,Y,beta))\n","print(\"Adjusted R^2 :\" , adjScore(standardized_X2,Y,beta,M,N))\n","\n","beta = normalEqn(standardized_X2,Y)\n","print()\n","print(\"using normal equation: \")\n","print()\n","print(\"Cost:\" , cost(standardized_X2,Y,beta))\n","\n","print(\"R^2:\" ,score(standardized_X2,Y,beta))\n","\n","print(\"Adjusted R^2 :\" , adjScore(standardized_X2,Y,beta,M,N))\n","print(results.summary())"],"execution_count":40,"outputs":[{"output_type":"stream","text":["Iteration : 1 \t Cost : 721.1908\n","Iteration : 2 \t Cost : 302.4501\n","Iteration : 3 \t Cost : 202.0106\n","Iteration : 4 \t Cost : 147.0629\n","Iteration : 5 \t Cost : 112.2526\n","Iteration : 6 \t Cost : 89.4700\n","Iteration : 7 \t Cost : 74.1960\n","Iteration : 8 \t Cost : 63.6931\n","Iteration : 9 \t Cost : 56.2704\n","Iteration : 10 \t Cost : 50.8691\n","Iteration : 11 \t Cost : 46.8180\n","Iteration : 12 \t Cost : 43.6867\n","Iteration : 13 \t Cost : 41.1955\n","Iteration : 14 \t Cost : 39.1605\n","Iteration : 15 \t Cost : 37.4591\n","Iteration : 16 \t Cost : 36.0082\n","Iteration : 17 \t Cost : 34.7507\n","Iteration : 18 \t Cost : 33.6465\n","Iteration : 19 \t Cost : 32.6668\n","Iteration : 20 \t Cost : 31.7907\n","Iteration : 21 \t Cost : 31.0022\n","Iteration : 22 \t Cost : 30.2892\n","Iteration : 23 \t Cost : 29.6420\n","Iteration : 24 \t Cost : 29.0529\n","Iteration : 25 \t Cost : 28.5153\n","Iteration : 26 \t Cost : 28.0239\n","Iteration : 27 \t Cost : 27.5739\n","Iteration : 28 \t Cost : 27.1615\n","Iteration : 29 \t Cost : 26.7831\n","Iteration : 30 \t Cost : 26.4354\n","Iteration : 31 \t Cost : 26.1159\n","Iteration : 32 \t Cost : 25.8220\n","Iteration : 33 \t Cost : 25.5514\n","Iteration : 34 \t Cost : 25.3021\n","Iteration : 35 \t Cost : 25.0724\n","Iteration : 36 \t Cost : 24.8605\n","Iteration : 37 \t Cost : 24.6650\n","Iteration : 38 \t Cost : 24.4844\n","Iteration : 39 \t Cost : 24.3176\n","Iteration : 40 \t Cost : 24.1635\n","Iteration : 41 \t Cost : 24.0209\n","Iteration : 42 \t Cost : 23.8889\n","Iteration : 43 \t Cost : 23.7667\n","Iteration : 44 \t Cost : 23.6535\n","Iteration : 45 \t Cost : 23.5485\n","Iteration : 46 \t Cost : 23.4512\n","Iteration : 47 \t Cost : 23.3608\n","Iteration : 48 \t Cost : 23.2768\n","Iteration : 49 \t Cost : 23.1988\n","Iteration : 50 \t Cost : 23.1262\n","Iteration : 51 \t Cost : 23.0587\n","Iteration : 52 \t Cost : 22.9958\n","Iteration : 53 \t Cost : 22.9372\n","Iteration : 54 \t Cost : 22.8826\n","Iteration : 55 \t Cost : 22.8316\n","Iteration : 56 \t Cost : 22.7840\n","Iteration : 57 \t Cost : 22.7395\n","Iteration : 58 \t Cost : 22.6978\n","Iteration : 59 \t Cost : 22.6589\n","Iteration : 60 \t Cost : 22.6224\n","Iteration : 61 \t Cost : 22.5882\n","Iteration : 62 \t Cost : 22.5561\n","Iteration : 63 \t Cost : 22.5260\n","Iteration : 64 \t Cost : 22.4977\n","Iteration : 65 \t Cost : 22.4711\n","Iteration : 66 \t Cost : 22.4460\n","Iteration : 67 \t Cost : 22.4225\n","Iteration : 68 \t Cost : 22.4002\n","Iteration : 69 \t Cost : 22.3793\n","Iteration : 70 \t Cost : 22.3595\n","Iteration : 71 \t Cost : 22.3407\n","Iteration : 72 \t Cost : 22.3231\n","Iteration : 73 \t Cost : 22.3063\n","Iteration : 74 \t Cost : 22.2905\n","Iteration : 75 \t Cost : 22.2754\n","Iteration : 76 \t Cost : 22.2612\n","Iteration : 77 \t Cost : 22.2476\n","Iteration : 78 \t Cost : 22.2348\n","Iteration : 79 \t Cost : 22.2225\n","Iteration : 80 \t Cost : 22.2109\n","Iteration : 81 \t Cost : 22.1998\n","Iteration : 82 \t Cost : 22.1892\n","Iteration : 83 \t Cost : 22.1791\n","Iteration : 84 \t Cost : 22.1695\n","Iteration : 85 \t Cost : 22.1603\n","Iteration : 86 \t Cost : 22.1515\n","Iteration : 87 \t Cost : 22.1431\n","Iteration : 88 \t Cost : 22.1351\n","Iteration : 89 \t Cost : 22.1274\n","Iteration : 90 \t Cost : 22.1200\n","Iteration : 91 \t Cost : 22.1129\n","Iteration : 92 \t Cost : 22.1061\n","Iteration : 93 \t Cost : 22.0996\n","Iteration : 94 \t Cost : 22.0933\n","Iteration : 95 \t Cost : 22.0873\n","Iteration : 96 \t Cost : 22.0815\n","Iteration : 97 \t Cost : 22.0759\n","Iteration : 98 \t Cost : 22.0705\n","Iteration : 99 \t Cost : 22.0653\n","Iteration : 100 \t Cost : 22.0603\n","Iteration : 101 \t Cost : 22.0555\n","Iteration : 102 \t Cost : 22.0509\n","Iteration : 103 \t Cost : 22.0464\n","Iteration : 104 \t Cost : 22.0420\n","Iteration : 105 \t Cost : 22.0379\n","Iteration : 106 \t Cost : 22.0338\n","Iteration : 107 \t Cost : 22.0299\n","Iteration : 108 \t Cost : 22.0261\n","Iteration : 109 \t Cost : 22.0225\n","Iteration : 110 \t Cost : 22.0189\n","Iteration : 111 \t Cost : 22.0155\n","Iteration : 112 \t Cost : 22.0122\n","Iteration : 113 \t Cost : 22.0090\n","Iteration : 114 \t Cost : 22.0059\n","Iteration : 115 \t Cost : 22.0029\n","Iteration : 116 \t Cost : 21.9999\n","Iteration : 117 \t Cost : 21.9971\n","Iteration : 118 \t Cost : 21.9943\n","Iteration : 119 \t Cost : 21.9917\n","Iteration : 120 \t Cost : 21.9891\n","Iteration : 121 \t Cost : 21.9866\n","Iteration : 122 \t Cost : 21.9841\n","Iteration : 123 \t Cost : 21.9818\n","Iteration : 124 \t Cost : 21.9795\n","Iteration : 125 \t Cost : 21.9772\n","Iteration : 126 \t Cost : 21.9751\n","Iteration : 127 \t Cost : 21.9729\n","Iteration : 128 \t Cost : 21.9709\n","Iteration : 129 \t Cost : 21.9689\n","Iteration : 130 \t Cost : 21.9670\n","Iteration : 131 \t Cost : 21.9651\n","Iteration : 132 \t Cost : 21.9633\n","Iteration : 133 \t Cost : 21.9615\n","Iteration : 134 \t Cost : 21.9597\n","Iteration : 135 \t Cost : 21.9581\n","Iteration : 136 \t Cost : 21.9564\n","Iteration : 137 \t Cost : 21.9548\n","Iteration : 138 \t Cost : 21.9533\n","Iteration : 139 \t Cost : 21.9518\n","Iteration : 140 \t Cost : 21.9503\n","Iteration : 141 \t Cost : 21.9489\n","Iteration : 142 \t Cost : 21.9475\n","Iteration : 143 \t Cost : 21.9461\n","Iteration : 144 \t Cost : 21.9448\n","Iteration : 145 \t Cost : 21.9435\n","Iteration : 146 \t Cost : 21.9423\n","Iteration : 147 \t Cost : 21.9411\n","Iteration : 148 \t Cost : 21.9399\n","Iteration : 149 \t Cost : 21.9387\n","Iteration : 150 \t Cost : 21.9376\n","Iteration : 151 \t Cost : 21.9365\n","Iteration : 152 \t Cost : 21.9354\n","Iteration : 153 \t Cost : 21.9344\n","Iteration : 154 \t Cost : 21.9334\n","Iteration : 155 \t Cost : 21.9324\n","Iteration : 156 \t Cost : 21.9315\n","Iteration : 157 \t Cost : 21.9305\n","Iteration : 158 \t Cost : 21.9296\n","Iteration : 159 \t Cost : 21.9287\n","Iteration : 160 \t Cost : 21.9279\n","Iteration : 161 \t Cost : 21.9270\n","Iteration : 162 \t Cost : 21.9262\n","Iteration : 163 \t Cost : 21.9254\n","Iteration : 164 \t Cost : 21.9246\n","Iteration : 165 \t Cost : 21.9239\n","Iteration : 166 \t Cost : 21.9231\n","Iteration : 167 \t Cost : 21.9224\n","Iteration : 168 \t Cost : 21.9217\n","Iteration : 169 \t Cost : 21.9210\n","Iteration : 170 \t Cost : 21.9204\n","Iteration : 171 \t Cost : 21.9197\n","Iteration : 172 \t Cost : 21.9191\n","Iteration : 173 \t Cost : 21.9185\n","Iteration : 174 \t Cost : 21.9179\n","Iteration : 175 \t Cost : 21.9173\n","Iteration : 176 \t Cost : 21.9167\n","Iteration : 177 \t Cost : 21.9162\n","Iteration : 178 \t Cost : 21.9156\n","Iteration : 179 \t Cost : 21.9151\n","Iteration : 180 \t Cost : 21.9146\n","Iteration : 181 \t Cost : 21.9141\n","Iteration : 182 \t Cost : 21.9136\n","Iteration : 183 \t Cost : 21.9131\n","Iteration : 184 \t Cost : 21.9127\n","Iteration : 185 \t Cost : 21.9122\n","Iteration : 186 \t Cost : 21.9118\n","Iteration : 187 \t Cost : 21.9113\n","Iteration : 188 \t Cost : 21.9109\n","Iteration : 189 \t Cost : 21.9105\n","Iteration : 190 \t Cost : 21.9101\n","Iteration : 191 \t Cost : 21.9097\n","Iteration : 192 \t Cost : 21.9094\n","Iteration : 193 \t Cost : 21.9090\n","Iteration : 194 \t Cost : 21.9086\n","Iteration : 195 \t Cost : 21.9083\n","Iteration : 196 \t Cost : 21.9079\n","Iteration : 197 \t Cost : 21.9076\n","Iteration : 198 \t Cost : 21.9073\n","Iteration : 199 \t Cost : 21.9070\n","Iteration : 200 \t Cost : 21.9067\n","Iteration : 201 \t Cost : 21.9064\n","Iteration : 202 \t Cost : 21.9061\n","Iteration : 203 \t Cost : 21.9058\n","Iteration : 204 \t Cost : 21.9055\n","Iteration : 205 \t Cost : 21.9052\n","Iteration : 206 \t Cost : 21.9050\n","Iteration : 207 \t Cost : 21.9047\n","Iteration : 208 \t Cost : 21.9045\n","Iteration : 209 \t Cost : 21.9042\n","Iteration : 210 \t Cost : 21.9040\n","Iteration : 211 \t Cost : 21.9038\n","Iteration : 212 \t Cost : 21.9035\n","Iteration : 213 \t Cost : 21.9033\n","Iteration : 214 \t Cost : 21.9031\n","Iteration : 215 \t Cost : 21.9029\n","Iteration : 216 \t Cost : 21.9027\n","Iteration : 217 \t Cost : 21.9025\n","Iteration : 218 \t Cost : 21.9023\n","Iteration : 219 \t Cost : 21.9021\n","Iteration : 220 \t Cost : 21.9019\n","Iteration : 221 \t Cost : 21.9017\n","Iteration : 222 \t Cost : 21.9016\n","Iteration : 223 \t Cost : 21.9014\n","Iteration : 224 \t Cost : 21.9012\n","Iteration : 225 \t Cost : 21.9011\n","Iteration : 226 \t Cost : 21.9009\n","Iteration : 227 \t Cost : 21.9008\n","Iteration : 228 \t Cost : 21.9006\n","Iteration : 229 \t Cost : 21.9005\n","Iteration : 230 \t Cost : 21.9003\n","Iteration : 231 \t Cost : 21.9002\n","Iteration : 232 \t Cost : 21.9001\n","Iteration : 233 \t Cost : 21.8999\n","Iteration : 234 \t Cost : 21.8998\n","Iteration : 235 \t Cost : 21.8997\n","Iteration : 236 \t Cost : 21.8995\n","Iteration : 237 \t Cost : 21.8994\n","Iteration : 238 \t Cost : 21.8993\n","Iteration : 239 \t Cost : 21.8992\n","Iteration : 240 \t Cost : 21.8991\n","Iteration : 241 \t Cost : 21.8990\n","Iteration : 242 \t Cost : 21.8989\n","Iteration : 243 \t Cost : 21.8988\n","Iteration : 244 \t Cost : 21.8987\n","Iteration : 245 \t Cost : 21.8986\n","Iteration : 246 \t Cost : 21.8985\n","Iteration : 247 \t Cost : 21.8984\n","Iteration : 248 \t Cost : 21.8983\n","Iteration : 249 \t Cost : 21.8982\n","Iteration : 250 \t Cost : 21.8981\n","R^2: 0.7406046187263245\n","Adjusted R^2 : 0.7601734399528332\n","\n","using normal equation: \n","\n","Cost: 21.894831181729206\n","R^2: 0.7406426641094094\n","Adjusted R^2 : 0.7602124906001052\n"],"name":"stdout"},{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-40-2ef0aaab7e9e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     80\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     81\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Adjusted R^2 :\"\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0madjScore\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstandardized_X2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mY\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mbeta\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mM\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mN\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 82\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresults\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msummary\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'results' is not defined"]}]},{"cell_type":"code","metadata":{"id":"eP2ImOQEspfZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1629805067260,"user_tz":-120,"elapsed":235,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"3efde2b3-e858-42f3-d800-ff3931be37eb"},"source":["import numpy as np\n","X = np.array([[1,2,3],[4,5,6],[7,8,9]])\n","\n","X[:,2]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([3, 6, 9])"]},"metadata":{},"execution_count":110}]},{"cell_type":"markdown","metadata":{"id":"zU_-FmqIplt8"},"source":[""]}]}